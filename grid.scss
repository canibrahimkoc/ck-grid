$wrapper-breakpoints: (xs: 576px, sm: 576px, md: 768px, lg: 992px, xl:1200px ) !default;
$wrapper-width-xs: 100% !default;
$wrapper-width-sm: 100% !default;
$wrapper-width-md: 100% !default;
$wrapper-width-lg: 960px !default;
$wrapper-width-xl: 1140px !default;

$wrapper-gutter-xs: 10px !default;
$wrapper-gutter-sm: 10px !default;
$wrapper-gutter-md: 15px !default;
$wrapper-gutter-lg: 15px !default;
$wrapper-gutter-xl: 15px !default;

@mixin clear {
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }

    &:after {
        clear: both;
    }
}

@mixin mq($width, $type: min) {
    @if map_has_key($wrapper-breakpoints, $width) {
        $width: map_get($wrapper-breakpoints, $width);

        @if $type == max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin container {
    [class$="-container"] {
        margin: 0 auto;
        display: block;

        @include mq(xs,max) {
            width: $wrapper-width-xs;
            padding-right: $wrapper-gutter-xs;
            padding-left: $wrapper-gutter-xs;
        }

        @include mq(sm) {
            width: $wrapper-width-sm;
            padding-right: $wrapper-gutter-sm;
            padding-left: $wrapper-gutter-sm;
        }

        @include mq(md) {
            width: $wrapper-width-md;
            padding-right: $wrapper-gutter-md;
            padding-left: $wrapper-gutter-md;
        }

        @include mq(lg) {
            width: $wrapper-width-lg;
            padding-right: $wrapper-gutter-lg;
            padding-left: $wrapper-gutter-lg;
        }

        @include mq(xl) {
            width: $wrapper-width-xl;
            padding-right: $wrapper-gutter-xl;
            padding-left: $wrapper-gutter-xl;
        }

        @include clear;
    }

    [class$="-full"] {
        margin: 0;
        display: block;
        width: 100%;

        @include mq(xs,max) {
            padding-right: $wrapper-gutter-xs;
            padding-left: $wrapper-gutter-xs;
        }

        @include mq(sm) {
            padding-right: $wrapper-gutter-sm;
            padding-left: $wrapper-gutter-sm;
        }

        @include mq(md) {
            padding-right: $wrapper-gutter-md;
            padding-left: $wrapper-gutter-md;
        }

        @include mq(lg) {
            padding-right: $wrapper-gutter-lg;
            padding-left: $wrapper-gutter-lg;
        }

        @include mq(xl) {
            padding-right: $wrapper-gutter-xl;
            padding-left: $wrapper-gutter-xl;
        }

        @include clear;
    }
}

@mixin row ($offset: null) {
    @if ($offset == null) {
        margin-right: -$wrapper-gutter-xl;
        margin-left: -$wrapper-gutter-xl;

        @include mq(xl,max) {
            margin-right: -$wrapper-gutter-xl;
            margin-left: -$wrapper-gutter-xl;
        }

        @include mq(lg,max) {
            margin-right: -$wrapper-gutter-lg;
            margin-left: -$wrapper-gutter-lg;
        }

        @include mq(md,max) {
            margin-right: -$wrapper-gutter-md;
            margin-left: -$wrapper-gutter-md;
        }

        @include mq(sm,max) {
            margin-right: -$wrapper-gutter-sm;
            margin-left: -$wrapper-gutter-sm;
        }

        @include mq(xs,max) {
            margin-right: -$wrapper-gutter-xs;
            margin-left: -$wrapper-gutter-xs;
        }
    }
    @else {
        margin-right: -$offset !important;
        margin-left: -$offset !important;
    }

    @include clear;
}

@mixin calc($key, $value) {
    #{$key}: -webkit-calc(#{$value});
    #{$key}: -moz-calc(#{$value});
    #{$key}: -ms-calc(#{$value});
    #{$key}: -o-calc(#{$value});
    #{$key}: calc(#{$value});
}

@mixin grid ($sum: 1, $col: 1, $position: null, $margin: 0, $gutter: gutter, $important: null) {
    $grid: percentage($col/$sum);
    $i: unquote("!important");
    display: block;

    @if $grid == 100% {
        float: none;
        clear: both;
        width: 100%;
        @include clear;
    }
    @else {
        float: left;
        clear: none;
    }

    @if $important == "i" {
        $i: unquote("!important");
    }
    @else {
        $i: unquote("");
    }

    @if $margin > 0 {
        width: -webkit-calc(#{$grid} - #{$margin}) $i;
        width: -moz-calc(#{$grid} - #{$margin}) $i;
        width: -ms-calc(#{$grid} - #{$margin}) $i;
        width: -o-calc(#{$grid} - #{$margin}) $i;
        width: calc(#{$grid} - #{$margin}) $i;
    }

    @if $position == "right" {
        margin-right: $margin;
    }
    @else if $position == "left" {
        margin-left: $margin;
    }
    @else if $position == "top" {
        margin-top: $margin;
    }
    @else if $position == "bottom" {
        margin-bottom: $margin;
    }
    @else if $position == "center" {
        margin: 0 auto;
    }
    @else if $position == "rl" {
        margin-right: calc(#{$margin} / 2);
        margin-left: calc(#{$margin} / 2);
    }
    @else {
        $space: $wrapper-gutter-xl * 2;
        @include calc("width", "#{$grid} - #{$space}");
        margin-right: $wrapper-gutter-xl;
        margin-left: $wrapper-gutter-xl;

        @include mq(xl,max) {
            $space: $wrapper-gutter-xl * 2;
            @include calc("width", "#{$grid} - #{$space}");
            margin-right: $wrapper-gutter-xl;
            margin-left: $wrapper-gutter-xl;
        }

        @include mq(lg,max) {
            $space: $wrapper-gutter-lg * 2;
            @include calc("width", "#{$grid} - #{$space}");
            margin-right: $wrapper-gutter-lg;
            margin-left: $wrapper-gutter-lg;
        }

        @include mq(md,max) {
            $space: $wrapper-gutter-md * 2;
            @include calc("width", "#{$grid} - #{$space}");
            margin-right: $wrapper-gutter-md;
            margin-left: $wrapper-gutter-md;
        }

        @include mq(sm,max) {
            $space: $wrapper-gutter-sm * 2;
            @include calc("width", "#{$grid} - #{$space}");
            margin-right: $wrapper-gutter-sm;
            margin-left: $wrapper-gutter-sm;
        }

        @include mq(xs,max) {
            $space: $wrapper-gutter-xs * 2;
            @include calc("width", "#{$grid} - #{$space}");
            margin-right: $wrapper-gutter-xs;
            margin-left: $wrapper-gutter-xs;
        }
    }
}
