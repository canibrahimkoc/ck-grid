$wrapper-breakpoints: (xs:576px, sm:576px, md:768px, lg:992px, xl:1200px) !default;
$wrapper-width: (xs:100%, sm:100%, md:100%, lg:960px, xl:1140px) !default;
$wrapper-gutter: (xs:10px, sm:10px, md:10px, lg:15px, xl:15px) !default;

@mixin mq($width, $type: min) {
    @if map_has_key($wrapper-breakpoints, $width) {
        $width: map_get($wrapper-breakpoints, $width);

        @if $type == max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin edges($width) {
    width: map-get($wrapper-width,$width);
}

@mixin offset($padding) {
    padding-right: map-get($wrapper-gutter,$padding);
    padding-left: map-get($wrapper-gutter,$padding);
}

@mixin gutter($margin) {
    margin-right: - map-get($wrapper-gutter,$margin);
    margin-left: - map-get($wrapper-gutter,$margin);
}

@mixin container {
    [class$="-container"] {
        margin: 0 auto;
        display: block;

        @include mq(xs,max) {
            @include edges(xs);
            @include offset(xs);
        }

        @include mq(sm) {
            @include edges(sm);
            @include offset(sm);
        }

        @include mq(md) {
            @include edges(md);
            @include offset(md);
        }

        @include mq(lg) {
            @include edges(lg);
            @include offset(lg);
        }

        @include mq(xl) {
            @include edges(xl);
            @include offset(xl);
        }

        @include clear;
    }

    [class$="-full"] {
        margin: 0;
        display: block;
        width: 100%;

        @include mq(xs,max) {
            @include offset(xs);
        }

        @include mq(sm) {
            @include offset(sm);
        }

        @include mq(md) {
            @include offset(md);
        }

        @include mq(lg) {
            @include offset(lg);
        }

        @include mq(xl) {
            @include offset(xl);
        }

        @include clear;
    }
}

@mixin row ($offset: null) {

    @if ($offset == null) {
        @include mq(xs,max) {
            @include gutter(xs);
        }

        @include mq(sm) {
            @include gutter(sm);
        }

        @include mq(md) {
            @include gutter(md);
        }

        @include mq(lg) {
            @include gutter(lg);
        }

        @include mq(xl) {
            @include gutter(xl);
        }
    }
    @else {
        margin-right: -$offset !important;
        margin-left: -$offset !important;
    }

    @include clear;
}

@mixin calc($key, $value) {
    #{$key}: -webkit-calc(#{$value});
    #{$key}: -moz-calc(#{$value});
    #{$key}: -ms-calc(#{$value});
    #{$key}: -o-calc(#{$value});
    #{$key}: calc(#{$value});
}

@mixin column($width,$grid: 0) {
    $space: map-get($wrapper-gutter,$width) * 2;
    @include calc("width", "#{$grid} - #{$space}");
    margin-right: map-get($wrapper-gutter,$width);
    margin-left: map-get($wrapper-gutter,$width);
}

@mixin grid ($sum: 1, $col: 1, $position: null, $margin: 0, $important: null) {
    $grid: percentage($col/$sum);
    $i: unquote("!important");
    display: block;

    @if $grid == 100% {
        float: none;
        clear: both;
        width: 100%;
        @include clear;
    }
    @else {
        float: left;
        clear: none;
    }

    @if $position == "right" {
        margin-right: $margin;
    }
    @else if $position == "left" {
        margin-left: $margin;
    }
    @else if $position == "top" {
        margin-top: $margin;
    }
    @else if $position == "bottom" {
        margin-bottom: $margin;
    }
    @else if $position == "center" {
        margin: 0 auto;
    }
    @else if $position == "rl" {
        margin-right: calc(#{$margin} / 2);
        margin-left: calc(#{$margin} / 2);
    }
    @else {
        @include mq(xs,max) {
            @include column(xs,$grid);
        }

        @include mq(sm) {
            @include column(sm,$grid);
        }

        @include mq(md) {
            @include column(md,$grid);
        }

        @include mq(lg) {
            @include column(lg,$grid);
        }

        @include mq(xl) {
            @include column(xl,$grid);
        }
    }

    @if $margin > 0 {
        width: -webkit-calc(#{$grid} - #{$margin}) $i;
        width: -moz-calc(#{$grid} - #{$margin}) $i;
        width: -ms-calc(#{$grid} - #{$margin}) $i;
        width: -o-calc(#{$grid} - #{$margin}) $i;
        width: calc(#{$grid} - #{$margin}) $i;
    }

    @if $important == "i" {
        $i: unquote("!important");
    }
    @else {
        $i: unquote("");
    }
}

@mixin clear {
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }

    &:after {
        clear: both;
    }
}
